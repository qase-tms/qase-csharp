/*
 * Qase.io TestOps API v1
 *
 * Qase TestOps API v1 Specification.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@qase.io
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

#nullable enable

using System;
using System.Collections.Generic;
using System.Linq;
using System.Text.Json;
using System.Text.Json.Serialization;
using System.Net.Http;
using Microsoft.Extensions.DependencyInjection;
using Qase.ApiClient.V1.Api;
using Qase.ApiClient.V1.Model;

namespace Qase.ApiClient.V1.Client
{
    /// <summary>
    /// Provides hosting configuration for Qase.ApiClient.V1
    /// </summary>
    public class HostConfiguration
    {
        private readonly IServiceCollection _services;
        private readonly JsonSerializerOptions _jsonOptions = new JsonSerializerOptions();

        internal bool HttpClientsAdded { get; private set; }

        /// <summary>
        /// Instantiates the class 
        /// </summary>
        /// <param name="services"></param>
        public HostConfiguration(IServiceCollection services)
        {
            _services = services;
            _jsonOptions.Converters.Add(new JsonStringEnumConverter());
            _jsonOptions.Converters.Add(new DateTimeJsonConverter());
            _jsonOptions.Converters.Add(new DateTimeNullableJsonConverter());
            _jsonOptions.Converters.Add(new AttachmentJsonConverter());
            _jsonOptions.Converters.Add(new AttachmentGetJsonConverter());
            _jsonOptions.Converters.Add(new AttachmentHashJsonConverter());
            _jsonOptions.Converters.Add(new AttachmentListResponseJsonConverter());
            _jsonOptions.Converters.Add(new AttachmentListResponseAllOfResultJsonConverter());
            _jsonOptions.Converters.Add(new AttachmentResponseJsonConverter());
            _jsonOptions.Converters.Add(new AttachmentUploadsResponseJsonConverter());
            _jsonOptions.Converters.Add(new AttachmentuploadJsonConverter());
            _jsonOptions.Converters.Add(new AuthorJsonConverter());
            _jsonOptions.Converters.Add(new AuthorListResponseJsonConverter());
            _jsonOptions.Converters.Add(new AuthorListResponseAllOfResultJsonConverter());
            _jsonOptions.Converters.Add(new AuthorResponseJsonConverter());
            _jsonOptions.Converters.Add(new BaseResponseJsonConverter());
            _jsonOptions.Converters.Add(new Bulk200ResponseJsonConverter());
            _jsonOptions.Converters.Add(new Bulk200ResponseAllOfResultJsonConverter());
            _jsonOptions.Converters.Add(new ConfigurationCreateJsonConverter());
            _jsonOptions.Converters.Add(new ConfigurationGroupJsonConverter());
            _jsonOptions.Converters.Add(new ConfigurationGroupCreateJsonConverter());
            _jsonOptions.Converters.Add(new ConfigurationListResponseJsonConverter());
            _jsonOptions.Converters.Add(new ConfigurationListResponseAllOfResultJsonConverter());
            _jsonOptions.Converters.Add(new CustomFieldJsonConverter());
            _jsonOptions.Converters.Add(new CustomFieldCreateJsonConverter());
            _jsonOptions.Converters.Add(new CustomFieldCreateValueInnerJsonConverter());
            _jsonOptions.Converters.Add(new CustomFieldListResponseJsonConverter());
            _jsonOptions.Converters.Add(new CustomFieldResponseJsonConverter());
            _jsonOptions.Converters.Add(new CustomFieldUpdateJsonConverter());
            _jsonOptions.Converters.Add(new CustomFieldValueJsonConverter());
            _jsonOptions.Converters.Add(new CustomFieldsResponseJsonConverter());
            _jsonOptions.Converters.Add(new CustomFieldsResponseAllOfResultJsonConverter());
            _jsonOptions.Converters.Add(new DefectJsonConverter());
            _jsonOptions.Converters.Add(new DefectCreateJsonConverter());
            _jsonOptions.Converters.Add(new DefectListResponseJsonConverter());
            _jsonOptions.Converters.Add(new DefectListResponseAllOfResultJsonConverter());
            _jsonOptions.Converters.Add(new DefectQueryJsonConverter());
            _jsonOptions.Converters.Add(new DefectResponseJsonConverter());
            _jsonOptions.Converters.Add(new DefectStatusJsonConverter());
            _jsonOptions.Converters.Add(new DefectUpdateJsonConverter());
            _jsonOptions.Converters.Add(new EnvironmentCreateJsonConverter());
            _jsonOptions.Converters.Add(new EnvironmentListResponseJsonConverter());
            _jsonOptions.Converters.Add(new EnvironmentListResponseAllOfResultJsonConverter());
            _jsonOptions.Converters.Add(new EnvironmentResponseJsonConverter());
            _jsonOptions.Converters.Add(new EnvironmentUpdateJsonConverter());
            _jsonOptions.Converters.Add(new ExternalIssueJsonConverter());
            _jsonOptions.Converters.Add(new ExternalIssueIssuesInnerJsonConverter());
            _jsonOptions.Converters.Add(new HashResponseJsonConverter());
            _jsonOptions.Converters.Add(new HashResponseAllOfResultJsonConverter());
            _jsonOptions.Converters.Add(new IdResponseJsonConverter());
            _jsonOptions.Converters.Add(new IdResponseAllOfResultJsonConverter());
            _jsonOptions.Converters.Add(new MilestoneJsonConverter());
            _jsonOptions.Converters.Add(new MilestoneCreateJsonConverter());
            _jsonOptions.Converters.Add(new MilestoneListResponseJsonConverter());
            _jsonOptions.Converters.Add(new MilestoneListResponseAllOfResultJsonConverter());
            _jsonOptions.Converters.Add(new MilestoneResponseJsonConverter());
            _jsonOptions.Converters.Add(new MilestoneUpdateJsonConverter());
            _jsonOptions.Converters.Add(new ModelConfigurationJsonConverter());
            _jsonOptions.Converters.Add(new ModelEnvironmentJsonConverter());
            _jsonOptions.Converters.Add(new PlanJsonConverter());
            _jsonOptions.Converters.Add(new PlanCreateJsonConverter());
            _jsonOptions.Converters.Add(new PlanDetailedJsonConverter());
            _jsonOptions.Converters.Add(new PlanDetailedAllOfCasesJsonConverter());
            _jsonOptions.Converters.Add(new PlanListResponseJsonConverter());
            _jsonOptions.Converters.Add(new PlanListResponseAllOfResultJsonConverter());
            _jsonOptions.Converters.Add(new PlanQueryJsonConverter());
            _jsonOptions.Converters.Add(new PlanResponseJsonConverter());
            _jsonOptions.Converters.Add(new PlanUpdateJsonConverter());
            _jsonOptions.Converters.Add(new ProjectJsonConverter());
            _jsonOptions.Converters.Add(new ProjectAccessJsonConverter());
            _jsonOptions.Converters.Add(new ProjectCodeResponseJsonConverter());
            _jsonOptions.Converters.Add(new ProjectCodeResponseAllOfResultJsonConverter());
            _jsonOptions.Converters.Add(new ProjectCountsJsonConverter());
            _jsonOptions.Converters.Add(new ProjectCountsDefectsJsonConverter());
            _jsonOptions.Converters.Add(new ProjectCountsRunsJsonConverter());
            _jsonOptions.Converters.Add(new ProjectCreateJsonConverter());
            _jsonOptions.Converters.Add(new ProjectListResponseJsonConverter());
            _jsonOptions.Converters.Add(new ProjectListResponseAllOfResultJsonConverter());
            _jsonOptions.Converters.Add(new ProjectResponseJsonConverter());
            _jsonOptions.Converters.Add(new QqlDefectJsonConverter());
            _jsonOptions.Converters.Add(new QqlPlanJsonConverter());
            _jsonOptions.Converters.Add(new QqlTestCaseJsonConverter());
            _jsonOptions.Converters.Add(new RequirementJsonConverter());
            _jsonOptions.Converters.Add(new RequirementQueryJsonConverter());
            _jsonOptions.Converters.Add(new ResponseJsonConverter());
            _jsonOptions.Converters.Add(new ResultJsonConverter());
            _jsonOptions.Converters.Add(new ResultCreateJsonConverter());
            _jsonOptions.Converters.Add(new ResultCreateBulkJsonConverter());
            _jsonOptions.Converters.Add(new ResultCreateCaseJsonConverter());
            _jsonOptions.Converters.Add(new ResultCreateResponseJsonConverter());
            _jsonOptions.Converters.Add(new ResultCreateResponseAllOfResultJsonConverter());
            _jsonOptions.Converters.Add(new ResultListResponseJsonConverter());
            _jsonOptions.Converters.Add(new ResultListResponseAllOfResultJsonConverter());
            _jsonOptions.Converters.Add(new ResultQueryJsonConverter());
            _jsonOptions.Converters.Add(new ResultResponseJsonConverter());
            _jsonOptions.Converters.Add(new ResultUpdateJsonConverter());
            _jsonOptions.Converters.Add(new ResultCreateBulkJsonConverter());
            _jsonOptions.Converters.Add(new RunJsonConverter());
            _jsonOptions.Converters.Add(new RunCreateJsonConverter());
            _jsonOptions.Converters.Add(new RunEnvironmentJsonConverter());
            _jsonOptions.Converters.Add(new RunListResponseJsonConverter());
            _jsonOptions.Converters.Add(new RunListResponseAllOfResultJsonConverter());
            _jsonOptions.Converters.Add(new RunMilestoneJsonConverter());
            _jsonOptions.Converters.Add(new RunPublicJsonConverter());
            _jsonOptions.Converters.Add(new RunPublicResponseJsonConverter());
            _jsonOptions.Converters.Add(new RunPublicResponseAllOfResultJsonConverter());
            _jsonOptions.Converters.Add(new RunQueryJsonConverter());
            _jsonOptions.Converters.Add(new RunResponseJsonConverter());
            _jsonOptions.Converters.Add(new RunStatsJsonConverter());
            _jsonOptions.Converters.Add(new SearchResponseJsonConverter());
            _jsonOptions.Converters.Add(new SearchResponseAllOfResultJsonConverter());
            _jsonOptions.Converters.Add(new SearchResponseAllOfResultEntitiesJsonConverter());
            _jsonOptions.Converters.Add(new SharedStepJsonConverter());
            _jsonOptions.Converters.Add(new SharedStepContentJsonConverter());
            _jsonOptions.Converters.Add(new SharedStepContentCreateJsonConverter());
            _jsonOptions.Converters.Add(new SharedStepCreateJsonConverter());
            _jsonOptions.Converters.Add(new SharedStepListResponseJsonConverter());
            _jsonOptions.Converters.Add(new SharedStepListResponseAllOfResultJsonConverter());
            _jsonOptions.Converters.Add(new SharedStepResponseJsonConverter());
            _jsonOptions.Converters.Add(new SharedStepUpdateJsonConverter());
            _jsonOptions.Converters.Add(new SuiteJsonConverter());
            _jsonOptions.Converters.Add(new SuiteCreateJsonConverter());
            _jsonOptions.Converters.Add(new SuiteDeleteJsonConverter());
            _jsonOptions.Converters.Add(new SuiteListResponseJsonConverter());
            _jsonOptions.Converters.Add(new SuiteListResponseAllOfResultJsonConverter());
            _jsonOptions.Converters.Add(new SuiteResponseJsonConverter());
            _jsonOptions.Converters.Add(new SuiteUpdateJsonConverter());
            _jsonOptions.Converters.Add(new SystemFieldJsonConverter());
            _jsonOptions.Converters.Add(new SystemFieldListResponseJsonConverter());
            _jsonOptions.Converters.Add(new SystemFieldOptionJsonConverter());
            _jsonOptions.Converters.Add(new TagValueJsonConverter());
            _jsonOptions.Converters.Add(new TestCaseJsonConverter());
            _jsonOptions.Converters.Add(new TestCaseCreateJsonConverter());
            _jsonOptions.Converters.Add(new TestCaseExternalIssuesJsonConverter());
            _jsonOptions.Converters.Add(new TestCaseExternalIssuesLinksInnerJsonConverter());
            _jsonOptions.Converters.Add(new TestCaseListResponseJsonConverter());
            _jsonOptions.Converters.Add(new TestCaseListResponseAllOfResultJsonConverter());
            _jsonOptions.Converters.Add(new TestCaseParamsJsonConverter());
            _jsonOptions.Converters.Add(new TestCaseQueryJsonConverter());
            _jsonOptions.Converters.Add(new TestCaseResponseJsonConverter());
            _jsonOptions.Converters.Add(new TestCaseUpdateJsonConverter());
            _jsonOptions.Converters.Add(new TestCasebulkJsonConverter());
            _jsonOptions.Converters.Add(new TestCasebulkCasesInnerJsonConverter());
            _jsonOptions.Converters.Add(new TestCaseExternalIssuesJsonConverter());
            _jsonOptions.Converters.Add(new TestStepJsonConverter());
            _jsonOptions.Converters.Add(new TestStepCreateJsonConverter());
            _jsonOptions.Converters.Add(new TestStepResultJsonConverter());
            _jsonOptions.Converters.Add(new TestStepResultCreateJsonConverter());
            JsonSerializerOptionsProvider jsonSerializerOptionsProvider = new JsonSerializerOptionsProvider(_jsonOptions);
            _services.AddSingleton(jsonSerializerOptionsProvider);
            _services.AddSingleton<IApiFactory, ApiFactory>();
            _services.AddSingleton<AttachmentsApiEvents>();
            _services.AddTransient<IAttachmentsApi, AttachmentsApi>();
            _services.AddSingleton<AuthorsApiEvents>();
            _services.AddTransient<IAuthorsApi, AuthorsApi>();
            _services.AddSingleton<CasesApiEvents>();
            _services.AddTransient<ICasesApi, CasesApi>();
            _services.AddSingleton<ConfigurationsApiEvents>();
            _services.AddTransient<IConfigurationsApi, ConfigurationsApi>();
            _services.AddSingleton<CustomFieldsApiEvents>();
            _services.AddTransient<ICustomFieldsApi, CustomFieldsApi>();
            _services.AddSingleton<DefectsApiEvents>();
            _services.AddTransient<IDefectsApi, DefectsApi>();
            _services.AddSingleton<EnvironmentsApiEvents>();
            _services.AddTransient<IEnvironmentsApi, EnvironmentsApi>();
            _services.AddSingleton<MilestonesApiEvents>();
            _services.AddTransient<IMilestonesApi, MilestonesApi>();
            _services.AddSingleton<PlansApiEvents>();
            _services.AddTransient<IPlansApi, PlansApi>();
            _services.AddSingleton<ProjectsApiEvents>();
            _services.AddTransient<IProjectsApi, ProjectsApi>();
            _services.AddSingleton<ResultsApiEvents>();
            _services.AddTransient<IResultsApi, ResultsApi>();
            _services.AddSingleton<RunsApiEvents>();
            _services.AddTransient<IRunsApi, RunsApi>();
            _services.AddSingleton<SearchApiEvents>();
            _services.AddTransient<ISearchApi, SearchApi>();
            _services.AddSingleton<SharedStepsApiEvents>();
            _services.AddTransient<ISharedStepsApi, SharedStepsApi>();
            _services.AddSingleton<SuitesApiEvents>();
            _services.AddTransient<ISuitesApi, SuitesApi>();
            _services.AddSingleton<SystemFieldsApiEvents>();
            _services.AddTransient<ISystemFieldsApi, SystemFieldsApi>();
        }

        /// <summary>
        /// Configures the HttpClients.
        /// </summary>
        /// <param name="client"></param>
        /// <param name="builder"></param>
        /// <returns></returns>
        public HostConfiguration AddApiHttpClients
        (
            Action<HttpClient>? client = null, Action<IHttpClientBuilder>? builder = null)
        {
            if (client == null)
                client = c => c.BaseAddress = new Uri(ClientUtils.BASE_ADDRESS);

            List<IHttpClientBuilder> builders = new List<IHttpClientBuilder>();

            builders.Add(_services.AddHttpClient<IAttachmentsApi, AttachmentsApi>(client));
            builders.Add(_services.AddHttpClient<IAuthorsApi, AuthorsApi>(client));
            builders.Add(_services.AddHttpClient<ICasesApi, CasesApi>(client));
            builders.Add(_services.AddHttpClient<IConfigurationsApi, ConfigurationsApi>(client));
            builders.Add(_services.AddHttpClient<ICustomFieldsApi, CustomFieldsApi>(client));
            builders.Add(_services.AddHttpClient<IDefectsApi, DefectsApi>(client));
            builders.Add(_services.AddHttpClient<IEnvironmentsApi, EnvironmentsApi>(client));
            builders.Add(_services.AddHttpClient<IMilestonesApi, MilestonesApi>(client));
            builders.Add(_services.AddHttpClient<IPlansApi, PlansApi>(client));
            builders.Add(_services.AddHttpClient<IProjectsApi, ProjectsApi>(client));
            builders.Add(_services.AddHttpClient<IResultsApi, ResultsApi>(client));
            builders.Add(_services.AddHttpClient<IRunsApi, RunsApi>(client));
            builders.Add(_services.AddHttpClient<ISearchApi, SearchApi>(client));
            builders.Add(_services.AddHttpClient<ISharedStepsApi, SharedStepsApi>(client));
            builders.Add(_services.AddHttpClient<ISuitesApi, SuitesApi>(client));
            builders.Add(_services.AddHttpClient<ISystemFieldsApi, SystemFieldsApi>(client));
            
            if (builder != null)
                foreach (IHttpClientBuilder instance in builders)
                    builder(instance);

            HttpClientsAdded = true;

            return this;
        }

        /// <summary>
        /// Configures the JsonSerializerSettings
        /// </summary>
        /// <param name="options"></param>
        /// <returns></returns>
        public HostConfiguration ConfigureJsonOptions(Action<JsonSerializerOptions> options)
        {
            options(_jsonOptions);

            return this;
        }

        /// <summary>
        /// Adds tokens to your IServiceCollection
        /// </summary>
        /// <typeparam name="TTokenBase"></typeparam>
        /// <param name="token"></param>
        /// <returns></returns>
        public HostConfiguration AddTokens<TTokenBase>(TTokenBase token) where TTokenBase : TokenBase
        {
            return AddTokens(new TTokenBase[]{ token });
        }

        /// <summary>
        /// Adds tokens to your IServiceCollection
        /// </summary>
        /// <typeparam name="TTokenBase"></typeparam>
        /// <param name="tokens"></param>
        /// <returns></returns>
        public HostConfiguration AddTokens<TTokenBase>(IEnumerable<TTokenBase> tokens) where TTokenBase : TokenBase
        {
            TokenContainer<TTokenBase> container = new TokenContainer<TTokenBase>(tokens);
            _services.AddSingleton(services => container);

            return this;
        }

        /// <summary>
        /// Adds a token provider to your IServiceCollection
        /// </summary>
        /// <typeparam name="TTokenProvider"></typeparam>
        /// <typeparam name="TTokenBase"></typeparam>
        /// <returns></returns>
        public HostConfiguration UseProvider<TTokenProvider, TTokenBase>() 
            where TTokenProvider : TokenProvider<TTokenBase>
            where TTokenBase : TokenBase
        {
            _services.AddSingleton<TTokenProvider>();
            _services.AddSingleton<TokenProvider<TTokenBase>>(services => services.GetRequiredService<TTokenProvider>());

            return this;
        }
    }
}
